import type { GetStaticProps, NextPage } from "next";
import Head from "next/head";
import { FunctionComponent } from "react";

import NavBar from "../components/NavBar";
import Card from "../components/project/Card";
import { Project } from "../components/project/Card";
import rssFeed from "../lib/rss";

const About: FunctionComponent = () => {
  return (
    <div>
      <ul role="list" className="my-4 list-disc">
        <li>
          Open source enthoutiast
        </li>
        <li>
          ex CTF player
        </li>
        <li>
          Love Linux, Rust & Python
        </li>
        <li>
          Maintaining <a href="https://skins.tw" className="text-blue-500 hover:underline underline-offset-4">skins.tw</a>
        </li>
      </ul>
    </div>
  );
};

const Profiles: FunctionComponent = () => {
  return (
    <div>
      <ul role="list" className="my-4 marker:text-blue-500 list-disc">
        <li>
          <a 
            href="https://www.github.com/theobori"
            className="text-blue-500 hover:underline underline-offset-4"
          >
          GitHub
          </a>
        </li>
        <li>
          <a
            href="https://www.linkedin.com/in/theo-bori/"
            className="text-blue-500 hover:underline underline-offset-4"
          >
          LinkedIn
          </a>
        </li>
        <li>
          <a
            href="https://ctftime.org/user/67138/"
            className="text-blue-500 hover:underline underline-offset-4"
          >
          CTFtime
          </a>
        </li>
      </ul>
    </div>
  );
};

const PROJECTS = [
  {
    name: "NES Utilities",
    description: "Some utilities for the NES like disassembling, extracting CHR ROM graphics data, decoding Game Genie, etc..) in Rust",
    url: "https://github.com/theobori/nes-utils"
  },
  {
    name: "JackOS",
    description: "An experimental operating system",
    url: "https://github.com/theobori/JackOS"
  },
  {
    name: "Teeworlds utilities",
    description: "Teeworlds useful stuff like a renderer, asset merging, scenes system, etc..",
    url: "https://github.com/teeworlds-utilities"
  },
  {
    name: "libasm",
    description: "An x86 assembly library that implement some C functions",
    url: "https://github.com/theobori/libasm"
  },
  {
    name: "turtle-svg",
    description: "A Rust headless version of the turtle graphics library that generate SVG",
    url: "https://github.com/theobori/turtle-svg"
  },
  {
    name: "RSA.jl",
    description: "Ported the RSA in Julia",
    url: "https://github.com/theobori/RSA.jl"
  },
  {
    name: "bot-template",
    description: "A Discord bot template for Python",
    url: "https://github.com/theobori/bot-template"
  },
  {
    name: "lindenmayer",
    description: "Rust L-System library with multiple graphic API that generate a SVG",
    url: "https://github.com/theobori/lindermayer"
  },
  {
    name: "More projects",
    description: "",
    url: ""
  }
];

type Props = {
  projects: Project[]
}

const Projects: FunctionComponent<Props> = ({ projects }) => {
  return (
    <div>
      <ul role="list" className="my-4 marker:text-blue-500 list-disc">
        {
          projects.map(({ name, description, url}) => {
            return (
              <li key={name}>
                <Card
                  name={name}
                  description={description}
                  url={url}
                />
              </li>
            );
          })
        }
      </ul>
    </div>
  );
};

const Home: NextPage = () => {
  return (
    <div>
      <Head>
        <title>Th√©o Bori</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div>
        <div id="about" className="text-2xl font-bold">
          üí¨ About
        </div>
        <About />

        <div id="profiles" className="text-2xl font-bold">
          üîó Profiles
        </div>
        <Profiles />

        <div id="open-source" className="text-2xl font-bold">
          ‚≠êÔ∏è Open Source projects
        </div>
        <Projects projects={PROJECTS} /> 
  
      </div>

    </div>
  );
};

export const getStaticProps: GetStaticProps = async () => {
  await rssFeed();

  return {
    props: {}
  };
};

export default Home;
